/**
 * SP jun 2021
 * taken from dta v2.06 context video plugin
 * & mashed together with the jspsych jspsych-survey-html-form
 *
 **/

jsPsych.plugins["custom-video-form-inputs"] = (function() {

  var plugin = {};

  plugin.info = {
    name: 'custom-video-form-inputs',
    description: '',
    parameters: {
       stimulus: {
        type: jsPsych.plugins.parameterType.VIDEO,
        pretty_name: 'Stimulus',
        default: undefined,
        description: 'The video stimulus to be displayed'
      },
       width: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Stimulus width',
        default: '600',
        description: 'The width in pixels of the video to be displayed'
      },
       height: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Stimulus Height',
        default: '',
        description: 'The width in pixels of the video to be displayed'
      },
       autoplay: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Autoplay',
        default: true,
        description: 'If true, the video will begin playing as soon as it has loaded.'
      },
      controls: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Controls',
        default: true,
        description: 'If true, the subject will be able to pause the video or move the playback to any point in the video.'
      },
      start: {
        type: jsPsych.plugins.parameterType.FLOAT,
        pretty_name: 'Start',
        default: null,
        description: 'Time to start the clip.'
      },
      stop: {
        type: jsPsych.plugins.parameterType.FLOAT,
        pretty_name: 'Stop',
        default: null,
        description: 'Time to stop the clip.'
      },
      rate: {
        type: jsPsych.plugins.parameterType.FLOAT,
        pretty_name: 'Rate',
        default: null,
        description: 'The playback rate of the video. 1 is normal, <1 is slower, >1 is faster.'
      },
      loop: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'loop',
        default: false,
        description: 'Play the video in a loop.'
      },
      prompt: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Prompt',
        default: null,
        description: 'Any content here will be displayed under the stimulus.'
      },
      stimulus_duration: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Stimulus duration',
        default: null,
        description: 'How long to hide the stimulus.'
      },
      trial_duration: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Trial duration',
        default: null,
        description: 'How long to show trial before it ends.'
      },
       test_playback:{
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Test playback',
        default: false,
        description: 'Test whether video is playing?'
      },
      config_num:{
      type: jsPsych.plugins.parameterType.INT,
       pretty_name: 'Config # for this video',
       default: 0,
       array: false,
       description: 'For easier indexing, the config num.'
     },
      form_html: {
        type: jsPsych.plugins.parameterType.HTML_STRING,
        pretty_name: 'HTML',
        default: null,
        description: 'HTML formatted string containing all the input elements to display. Every element has to have its own distinctive name attribute. The <form> tag must not be included and is generated by the plugin.'
      },
      delay_form: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Form after video finish',
        default: false,
        description: 'Whether the input form is only shown after video finishes'
      },
      button_label: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Button label',
        default:  'Continue',
        description: 'The text that appears on the button to finish the trial.'
      },    
      submit_keys: {
        type: jsPsych.plugins.parameterType.KEYCODE,
        array: true,
        pretty_name: 'Submit keys',
        default: jsPsych.ALL_KEYS,
        description: 'The keys the subject is allowed to press to end the trial.'
      },
    }
  }

  plugin.trial = function(display_element, trial) {

    // set up video display
    var div_start ="<div style='margin:auto; display: table; table-layout: fixed;" +
    " border-spacing:8px; padding-top:20px'><div style='display:table-row;'> ";
    var div_end =  "</div></div>";

	  //show prompt if there is one
    if (trial.prompt !== null) {var prompt = trial.prompt;} else {var prompt = '';}

    var sources = trial.stimulus;
    if (typeof sources === 'string' || sources instanceof String) {sources = [sources];}

    // assemble video player html
    var video_html = '<video id="jspsych-video-player" muted ';
    if (trial.width) {video_html += ' width="' + trial.width + '"';}
    if (trial.height) {video_html += ' height="' + trial.height + '"';}
    if (trial.autoplay) {video_html += " autoplay ";}
    if (trial.loop) {video_html += " loop "}
    if (trial.controls) {video_html += " controls ";}
    video_html += ">";

    // inherited from DTA - probably not necessary for current plugin?
    var video_preload_blob = jsPsych.pluginAPI.getVideoBuffer(sources[0]);
    if (!video_preload_blob) {
      for (var i = 0; i < sources.length; i++) {
        var file_name = sources[i];
        video_html += '<source src="' + file_name + '">';
      }
    }
    video_html += " </video><br>";

    display_element.innerHTML = div_start + video_html + div_end + div_start + prompt + div_end;

    if (video_preload_blob) {display_element.querySelector('#jspsych-video-player').src = video_preload_blob;}

    // assemble input form
    // start form
    var form_html = '<div id="form-wrapper">' + '<form id="jspsych-survey-html-form">' + trial.form_html;

    // add submit button
    form_html += '<br><br><input type="submit" id="jspsych-survey-html-form-next" class="jspsych-btn jspsych-survey-html-form" value="'+trial.button_label+'"></input>';
    form_html += '</form>'+div_end

    display_element.innerHTML += form_html;

    if (trial.delay_form){
      display_element.querySelector("#form-wrapper").style.display='none';
    // playback functions
      display_element.querySelector('#jspsych-video-player').onended = function () {
      display_element.querySelector("#form-wrapper").style.display='inline-block';};
      document.getElementById("response").focus();
    }

    // don't allow submission before video is done, start RT recording
    var video_done = false
    display_element.querySelector('#jspsych-video-player').onended = function () {video_done=true};
    //display_element.querySelector('#jspsych-video-player').onended = function () {var start_time = performance.now();}

    if (trial.test_playback>0){
      // check whether video is playing X ms in. If not, abort all of experiment.
      jsPsych.pluginAPI.setTimeout(function () {
          test_playback()
      }, trial.test_playback);
    }

    function test_playback() {
      var readyState = display_element.querySelector('#jspsych-video-player').readyState;
      if (readyState>2) {
        //console.log('video is playing (jsPsych)');
        } else {
        //console.log('not playing (jsPsych)');
        jsPsych.pluginAPI.clearAllTimeouts();
        display_element.innerHTML = div_start + '<br>Video replay error detected. Potential incompatibility between browser ' +
            'video plugins and or videos (missing H.264 codec?).<br>' +
            'You cannot take part in the experiment. <br><b>Abort!</b>' + div_end;
      }
    }

    document.getElementById("response").focus();
    document.querySelector('#jspsych-video-player').playbackRate = trial.rate;

    // listen for submit click
    display_element.querySelector('#jspsych-survey-html-form').addEventListener('submit', function(event) {
      event.preventDefault(); // don't submit form
      on_submit();
    });

      // hide stimulus if stimulus_duration is set
    if (trial.stimulus_duration !== null) {
      jsPsych.pluginAPI.setTimeout(function() {
        display_element.querySelector('#jspsych-html-keyboard-response-stimulus').style.visibility = 'hidden';
      }, trial.stimulus_duration);
    }

    // end trial if trial_duration is set
    if (trial.trial_duration !== null) {
      jsPsych.pluginAPI.setTimeout(function() {
        end_trial();
      }, trial.trial_duration);
    }

    function on_submit() {
      // measure response time
    
      var form = document.querySelector('#jspsych-survey-html-form');
      if (document.getElementById("response").value != '' && video_done) {
        //var end_time = performance.now();
        //var response_time = end_time - start_time;

        // save data
        var trialdata = {
          //"user": trial.user,
          "annotation": trial.question_type,
          "response": parseInt(document.getElementById("response").value),
          "config":trial.config_num,
          "stimulus":trial.stimulus,
          //"rt": response_time
        };
    
        display_element.innerHTML = '';
    
        // next trial
        jsPsych.finishTrial(trialdata);
    
        var startTime = performance.now();
        }
      }

  }; // plugin.trial


  function listen_keys() {
    // start the response listener
    if (trial.response_keys != jsPsych.NO_KEYS) {
      var keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({
        callback_function: on_submit(),
        valid_responses: trial.response_keys,
        rt_method: 'performance',
        persist: false,
        allow_held_key: false
      });
    }
  };

  return plugin;
})();